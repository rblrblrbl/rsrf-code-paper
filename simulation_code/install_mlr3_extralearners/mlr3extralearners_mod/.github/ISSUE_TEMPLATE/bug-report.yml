name: Bug Report
description: Found something that looks like a bug? Start here!
labels: kind/bug
body:
- type: markdown
  attributes:
    value: |
      * Before submitting an issue, please update all mlr3 packages and check if the issue persists.
      * Please double-check if your issue is really related to the {mlr3} package or rather to one of its extension packages (e.g. {mlr3tuning}, {mlr3learners}, etc.).
      * If you have a question about how to do something, please consider asking on Stackoverflow or GitHub Discussions
      * When reporting a bug, please use one of the included [mlr3 tasks](https://mlr-org.com/tasks.html) via `task = tsk(<id>)`.

- type: textarea
  id: description
  attributes:
    label: Description
    description: |
      Issue description goes here.
  validations:
    required: true

- type: textarea
  id: code
  attributes:
    label: Reproducible example
    description: |
      Please provide a [minimal reproducible example](https://stackoverflow.com/help/minimal-reproducible-example), i.e. a simplified version of your problem executed in a fresh environment.
      The issue form below contains a quickstart example for your convenience.

      In addition, here are some additional step-by-step instructions:
          1. Copy the code that reproduces the problem.
          2. Run `reprex::reprex(session_info = TRUE, style = TRUE)`.
          3. Depending on your editor, you should now have the result in your clipboard or in a browser tab for manual copying.

      You can read more about {reprex} in [it's "do's and dont's" article](https://reprex.tidyverse.org/articles/reprex-dos-and-donts.html).
    placeholder: |
      Copy the code below and execute it to see how the {reprex} package can be used with {mlr3}

      reprex::reprex({
        library("mlr3")
        task = tsk("iris")
        learner = lrn("classif.rpart")

        # train a model of this learner for a subset of the task
        learner$train(task, row_ids = 1:120)
        # this is what the decision tree looks like
        learner$model
        }, session_into = TRUE
      )

  validations:
    required: true
